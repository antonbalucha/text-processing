package sk.yss.textprocessor.utilities;

import static sk.yss.textprocessor.utilities.connectors.DatabaseConnectionCloser.close;
import static sk.yss.textprocessor.utilities.connectors.DatabaseConnector.getConnection;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class DatabaseConnectorTest {

	private static final Logger logger = LogManager.getLogger(DatabaseConnectorTest.class);

	@Test
	public void testConnection() {
		Connection connection = getConnection();
		Assertions.assertNotNull(connection);
		close(connection);
	}

	@Test
	public void testInsert() {
		Connection connection = getConnection();
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = connection.prepareStatement("INSERT INTO test (small_text) VALUES (?)", Statement.RETURN_GENERATED_KEYS);
			ps.setString(1, ("insert from test " + System.currentTimeMillis()));
			ps.executeUpdate();

			rs = ps.getGeneratedKeys();

			if (rs != null && rs.next()) {
				int autoGeneratedID = rs.getInt(1);
				logger.info("Retrieved id='" + autoGeneratedID + "'");
			} else {
				logger.error("Problem with retrieving id of inserted record!");
			}
		} catch (SQLException e) {
			logger.error("SQLException: " + e.getMessage() + "; SQL state='" + e.getSQLState() + "'", e);
		} finally {
			close(rs);
			close(ps);
			close(connection);
		}
	}
}
